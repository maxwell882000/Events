worker_processes auto;  # Adjust according to your CPU cores

events {
    worker_connections 1024;  # Adjust as necessary
}

http {
    include /etc/nginx/mime.types;  # Include MIME types
    default_type application/octet-stream;

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile on;
    keepalive_timeout 65;

    # Include additional configuration files if needed
    include /etc/nginx/conf.d/*.conf;  # This line will include additional configurations

    # HTTP server for ACME challenge and redirection to HTTPS
    server {
        listen 80;
        server_name api.teams-up.uz;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;  # Ensure this path contains the ACME challenge files
        }

        location / {
            return 301 https://$host$request_uri;  # Redirect all other HTTP traffic to HTTPS
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name api.teams-up.uz;

        ssl_certificate /etc/nginx/certs/live/api.teams-up.uz/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/api.teams-up.uz/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://eventsbookingbackend:80;  # Forward requests to the .NET Core app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
