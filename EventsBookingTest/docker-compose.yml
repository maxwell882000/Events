services:
  traefik:
    image: traefik:v2.8
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=shaxa882@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"   # HTTP port
      - "443:443" # HTTPS port
    volumes:
      - certs:/letsencrypt  # Persistent storage for Let's Encrypt certificates
      - /var/run/docker.sock:/var/run/docker.sock  # For Traefik to access Docker events
    networks:
      - sportia-network

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: events_booking
      TZ: Asia/Tashkent
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist data between container runs
    networks:
      - sportia-network
    ports:
      - "5432:5432"  # Expose PostgreSQL port

  eventsbookingseed:
    image: eventsbookingseed
    build:
      context: ../
      dockerfile: ./EventsBookingSeed/Dockerfile
    environment:
      - Database__Postgresql__ConnectionString=Host=postgres;Port=5432;Username=postgres;Password=yourpassword;Database=events_booking;Pooling=true;
    depends_on:
      - postgres
    networks:
      - sportia-network

  eventsbookingjob:
    build:
      context: ../
      dockerfile: ./EventsBookingJob/Dockerfile
    environment:
      - Database__Postgresql__ConnectionString=Host=postgres;Port=5432;Username=postgres;Password=yourpassword;Database=events_booking;Pooling=true;
      - TZ=Asia/Tashkent
    depends_on:
      - postgres
    networks:
      - sportia-network

  eventsbookingbackend:
    build:
      context: ./../events-booking-backend/EventsBookingBackend/
      dockerfile: Dockerfile
    environment:
      - Database__Postgresql__ConnectionString=Host=postgres;Port=5432;Username=postgres;Password=yourpassword;Database=events_booking;Pooling=true;
      - FileOption__StoragePath=media/
      - PaymeOption__MerchantId=${PAYME_LOGIN}
      - PaymeOption__Paycom=Paycom
      - PaymeOption__Password=${PAYME_PASSWORD}
      - HostOption__BaseUrl=https://api.sportia.uz/
      - TZ=Asia/Tashkent
    networks:
      - sportia-network
    volumes:
      - ./../events-booking-backend/EventsBookingBackend/wwwroot:/app/wwwroot
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eventsbookingbackend.rule=Host(`api.sportia.uz`)"
      - "traefik.http.routers.eventsbookingbackend.entrypoints=websecure"
      - "traefik.http.routers.eventsbookingbackend.tls.certresolver=myresolver"  # Use the ACME resolver
      - "traefik.http.services.eventsbookingbackend.loadbalancer.server.port=8080"  # Specify the internal port of the backend service
    depends_on:
      - postgres

volumes:
  pgdata:
  certs:

networks:
  sportia-network:
    driver: bridge
